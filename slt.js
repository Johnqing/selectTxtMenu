// Generated by CoffeeScript 1.6.3
(function() {
  var Slt, defultConfig, document, isIe, ua, unit, window;

  window = this;

  document = window.document;

  ua = navigator.userAgent;

  isIe = !-[1];

  unit = {
    extend: function(destination, source) {
      var k;
      for (k in source) {
        destination[k] = source[k];
      }
      return destination;
    },
    on: function(element, type, handler) {
      if (element.addEventListener) {
        element.addEventListener(type, handler, false);
      } else {
        element.attachEvent("on" + type, handler);
      }
    },
    selectTxt: function(obj, callback) {
      unit.on(obj, 'mouseup', function(ev) {
        var endIndex, sText, staIndex, target;
        ev = ev || window.event;
        target = ev.target || ev.srcElement;
        if (/input|textarea/i.test(target.tagName) && /firefox/i.test(ua)) {
          staIndex = target.selectionStart;
          endIndex = target.selectionEnd;
          if (staIndex !== endIndex) {
            sText = target.value.substring(staIndex, endIndex);
            callback && callback(sText, target);
          }
        } else {
          if (!isIe) {
            sText = document.getSelection().toString();
          } else {
            sText = document.selection.createRange().text;
          }
          if (sText !== '') {
            callback && callback(sText, target);
          }
        }
      });
    }
  };

  Slt = function(opts) {
    return this.toolBarClass = opts.toolBarClass;
  };

  Slt.prototype = {
    createMenu: function() {
      var i, icons, menu, _i, _len, _ref;
      icons = '';
      _ref = this.list;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        icons += '<i class="icon-' + i + '" data-action="' + i + '">';
      }
      menu = document.createElement('div');
      menu.setAttribute('class', this.toolBarClass + '-menu');
      menu.innerHTML = icons;
      menu.style.display = 'none';
      return document.body.appendChild(menu);
    }
  };

  defultConfig = {
    toolBarClass: 'slt',
    list: ['p']
  };

  window.slt = function(opts) {
    opts = extend(defultConfig, opts);
    return new Slt(opts);
  };

}).call(this);
